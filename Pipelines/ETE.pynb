from ete3 import Tree
tree = Tree("/Users/shrinivas/Desktop/OG0000049.fasta_aligned_trim.tree.treefile", format=1) # load in the treefile

#########################################################################################################################################################################################
# if using NCBI database 
def get_taxid_and_name(accession):
    """
    Given an accession number, return the corresponding taxid and scientific name.
    """
    from Bio import Entrez
    Entrez.email = "nandi.shrini2@gmail.com"  # Always tell NCBI who you are
    
    # Search for the accession in the NCBI nucleotide database
    handle = Entrez.esearch(db="protein", term=accession)
    record = Entrez.read(handle)
    handle.close()
    
    if record['IdList']:
        # Fetch the taxonomic information
        handle = Entrez.esummary(db="nucleotide", id=record['IdList'][0])
        summary = Entrez.read(handle)
        handle.close()
        
        taxid = summary[0]['TaxId']
        name = ncbi.get_taxid_translator([taxid])[taxid]
        return taxid, name
    else:
        return None, None

# Build a dictionary of accession to scientific names
accession_to_name = {}
for node in tree.iter_leaves():
    accession = node.name
    taxid, name = get_taxid_and_name(accession)
    if name:
        accession_to_name[accession] = name


#########################################################################################################################################################################################

# if using a custom database as a tsv
# Load custom database from TSV file
def load_custom_database(filename):
    accession_to_species = {}
    with open(filename, 'r') as file:
        next(file)  # Skip header
        for line in file:
            accession, species = line.strip().split('\t')
            accession_to_species[accession] = species
    return accession_to_species

# Usage:
custom_database_file = "/Users/shrinivas/Desktop/trial/accession_guide_clean.tsv"
accession_to_species = load_custom_database(custom_database_file)

#########################################################################################################################################################################################

# change the names around 

for node in tree.iter_leaves():
    accession = node.name
    if accession in accession_to_species:
        node.name = accession_to_species[accession]

#########################################################################################################################################################################################

# Save the modified tree
tree.write(outfile="modified_tree.nw")

# Display the modified tree (optional)
from ete3 import TreeStyle
ts = TreeStyle()
ts.show_leaf_name = True
tree.show(tree_style=ts)








